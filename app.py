
import streamlit as st
import pandas as pd
from datetime import datetime
from collections import Counter
import os

st.set_page_config(page_title="LottoAI Premium", page_icon="üéØ")
st.title("üéØ LottoAI ‚Äì ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î‡∏î‡πâ‡∏ß‡∏¢ AI")

# ===== Dynamic premium code based on date =====
today_code = datetime.today().strftime("VIP%y%m%d")

# ===== Sidebar language =====
lang = st.sidebar.radio("üåê ‡∏†‡∏≤‡∏©‡∏≤ / Language", ("‡πÑ‡∏ó‡∏¢", "English"))

# ===== Input lottery history =====
st.header("üìã ‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏ß‡∏¢‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 10 ‡∏á‡∏ß‡∏î")
st.write("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: ‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ö‡∏ô, ‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á (‡πÄ‡∏ä‡πà‡∏ô: 123, 45)")

data_input = st.text_area("‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", height=200)
if data_input:
    try:
        lines = [line.strip() for line in data_input.strip().split("\n") if line.strip()]
        draws = []
        for line in lines:
            top3, bottom2 = map(str.strip, line.split(","))
            draws.append((top3, bottom2))
        df = pd.DataFrame(draws, columns=["‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ö‡∏ô", "‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á"])
        st.success("‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        st.dataframe(df)
    except:
        st.error("‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
else:
    df = None

# ===== Basic Analysis =====
if df is not None and len(df) >= 5:
    if st.button("üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤"):
        last5 = df.tail(5)
        digits = "".join("".join(row) for row in last5.values)
        freq = Counter(digits)
        most_common = freq.most_common()
        pie_data = pd.DataFrame(most_common, columns=["‡πÄ‡∏•‡∏Ç", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà"])
        st.subheader("üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÄ‡∏•‡∏Ç 0‚Äì9 (5 ‡∏á‡∏ß‡∏î‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á)")
        st.bar_chart(pie_data.set_index("‡πÄ‡∏•‡∏Ç"))

        top3 = [num for num, count in most_common[:3]]
        all_digits = set("0123456789")
        used_digits = set(d for d, c in most_common)
        missing = sorted(all_digits - used_digits)
        st.write("üî∫ ‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πà‡∏ô:", ", ".join(top3))
        st.write("üîª ‡πÄ‡∏•‡∏Ç‡∏î‡∏±‡∏ö:", ", ".join(missing))
        st.markdown("### üîÆ ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÄ‡∏•‡∏Ç‡∏ñ‡∏±‡∏î‡πÑ‡∏õ")
        st.markdown(f"<h1 style='color:red; text-align:center'>{top3[0]}</h1>", unsafe_allow_html=True)

# ===== Premium Section =====
st.markdown("---")
st.subheader("üíé ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á (Premium)")

if "unlocked" not in st.session_state:
    st.session_state.unlocked = False

with st.expander("üîê ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å Premium"):
    st.image("https://promptpay.io/0869135982/59", caption="PromptPay 59 ‡∏ö‡∏≤‡∏ó", width=250)
    uploaded = st.file_uploader("‡πÅ‡∏ô‡∏ö‡∏™‡∏•‡∏¥‡∏õ (.jpg, .png)", type=["jpg", "png"])
    name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ / ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£")
    code = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å", type="password")

    if uploaded and name:
        os.makedirs("slips", exist_ok=True)
        slip_path = f"slips/{datetime.now().strftime('%Y%m%d_%H%M%S')}_{name}.jpg"
        with open(slip_path, "wb") as f:
            f.write(uploaded.read())
        st.success("‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö")

    if code == today_code:
        st.session_state.unlocked = True
        st.success("‚úÖ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Premium ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß")
    elif code:
        st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ß‡∏±‡∏ô‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)")

if st.session_state.unlocked:
    st.markdown("### üîÆ ‡πÄ‡∏•‡∏Ç‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏° (‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏•‡∏∂‡∏Å)")
    st.markdown(f"<h2 style='color:red'>‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ö‡∏ô: 83, 91, 75, 40</h2>", unsafe_allow_html=True)
    st.markdown(f"<h2 style='color:red'>‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á: 29, 10, 58, 63</h2>", unsafe_allow_html=True)
    st.markdown(f"<h2 style='color:red'>‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ö‡∏ô: 583</h2>", unsafe_allow_html=True)
else:
    st.warning("üîí ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°")

# ===== Admin Panel =====
st.markdown("---")
with st.expander("üõ† Admin Panel (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö)"):
    admin_pw = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", type="password")
    if admin_pw == "admin123":
        st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        if os.path.exists("slips"):
            files = os.listdir("slips")
            if files:
                st.write("üìÇ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î:")
                for f in sorted(files, reverse=True):
                    st.image(f"slips/{f}", caption=f, width=300)
            else:
                st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏•‡∏¥‡∏õ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î")
        else:
            st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏•‡∏¥‡∏õ")
    elif admin_pw:
        st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
